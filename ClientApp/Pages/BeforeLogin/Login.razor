@page "/Login"
@inject HttpClient httpClient
@inject NavigationManager nav
@inject IJSRuntime js
@using ClientApp.Services
@inject IPolicyHolderDtoService PolicyHolderService
@using InsuranceApi.DTOs
<h3 class="page-title">Login to Your Account</h3>


<img src="/images/image.png" alt="Medical Insurance" style="width:60vh; float:left; margin-right:20px" />


<div class="form-container">
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="card-login">
            <div class="card-body">

                <div class="form-group">
                    <label for="email">Email</label>
                    <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                    <ValidationMessage For="@(() => loginModel.Email)" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.PasswordHash" />
                    <ValidationMessage For="@(() => loginModel.PasswordHash)" />
                </div>

               @*  <div class="otp-section mt-4">
                    <h3>OR</h3>
                    <h5 class="otp-title">Login with OTP</h5>

                    <div class="form-group">
                        <label for="otp">Enter 4-Digit OTP</label>
                        <InputText id="otp" type="otp" class="form-control" maxlength="4" @bind-value="loginModel.otp" />
                        <validationmessage for="@(() => loginModel.otp)" />
                    </div>
                    @* <button type="submit" class="btn btn-secondary">Login with OTP</button> *@

               @*  </div> *@ 

                <button type="submit" class="btn btn-primary mt-4">Login</button>
              
                <p class="text-lg-end mt-4">
                    Don't have an account? <a href="/register">Register here</a>
                </p>

            </div>
        </div>
    </EditForm>
    @if (errorMessage != null)
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
    <style>
        html, body {
            /*font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;*/
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            width: auto;
            /*background: url('./BackgroundImage.png') no-repeat center center fixed;*/
            background-color: lightcyan;
            height: 100vh;
            color: #333;
        }
    </style>
</div>


@code {
    private LoginDto loginModel = new LoginDto();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var token = await PolicyHolderService.LoginAsync(loginModel);

        if (!string.IsNullOrEmpty(token))
        {
            // Save the token or handle session management
            nav.NavigateTo("/PlansAfter");
        }
        else
        {
            errorMessage = "Invalid login attempt. Please check your credentials.";
        }
    }

    
  
}